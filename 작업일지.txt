해야할것



openList 에 목록이 제대로 안들어가는듯. 체크해야함.

--------------------------------------------

1. 자신의 인덱스를 이용하여 이웃인덱스 참조할때 잘못된값 들어있음. 자신과 같은 인덱스가 넘어옴. 수정해야됨

2. "navi_" 접두어가 들어간 경우만 익스포트 되게 하는데 이것을 익스포터에 명시해줘야한다.

3. 로더에서 "navi_" 접두어 처리 해야됨. find 로 처리하자.

4. "agent" 와 "point" 두가지를 각각 로딩할수있게 분리하자. fw엔진과은 그냥 이용만 할수있게 해주자. 엔진에 넣진말자.

5. Rendering 코드를 만들어 넣어서 비상업용 모듈로 공개할땐 강제로 화면에 워터마크 뜨게 하자.




--------------------------------------------
쓰임
 
최적의 길찾기 경로를 구한다
게임프로그래밍에서의 쓰임 : 그럴듯한 적의 AI 를 보여주기 위한 알고리즘. 이 자체는 AI라고 볼 수 없을 것이다. 정석적인 A* 길찾기는 실시간으로 쓰기에는 부적합하므로, 변형된 형태를 사용하게 된다.



용어
열린목록 : 가능성이 있는 지점을 저장한 목록.

닫힌목록 : 가능성이 없는 지점을 저장한 목록. 따라서 다시는 볼 필요가 없다.


정리
열린목록 : 우선순위 큐 (F=G+H 값이 작을수록 높은 우선순위)

열린목록을 우선순위 큐로 할 상황이 아니거나, 다른 자료구조로 할 필요성이 생겼을 때는 아래 알고리즘에서 열린목록.뺌 을 다음과 같이 이해하면 된다

열린목록.뺌 - 열린목록 중 F=G+H 값이 가장 작은 값을 빼오면 된다

닫힌목록 : 어떠한 자료구조 무관할 듯(속도를 위해서라면 map이겠지)

 

알고리즘


1) 열린목록.추가(시작지점)
2) 반복

  1) 현재지점 = 열린목록.뺌()
  2) 닫힌목록.푸시(현재지점)
  3) foreach(인접지점 in 현재지점 인접)

    1) if(인접지점.갈수있음() && not 닫힌목록.포함(인접지점))

      1) if(not 열린목록.포함(인접지점))

        1) 열린목록.추가(인접지점)
        2) 인접지점.부모 = 현재지점
        3) 인접지점.F비용계산() | 방법 >> F = G(인접지점.부모.F비용) + H(GOAL까지 거리) | 인접지점.부모 는 현재지점이므로 G 를 현재지점.F비용으로 하면 됨

      2) else // if(열린목록.포함(인접지점))

        1) 인접지점.G비용계산() | 방법 >> 현재비용.F비용(인접지점.부모 는 지정안되어있있으므로 인접지점.부모.F비용으로 하면 안됨)
        2) 계산된 비용이 더 작으면

          1) 인접지점.부모 = 현재지점
          2) 인접지점.F비용계산() | 방법 >> F = G(인접지점.부모.F비용) + H(GOAL까지 거리) | 인접지점.부모 는 현재지점이므로 G 를 현재지점.F비용으로 하면 됨

    2) 목표지점을 열린목록에 추가했다면, foreach 빠져나감
    3) 열린목록이 비었다면, 찾는데 실패했으므로 foreach 빠져나감

3) 길저장하기 | 방법 >> 목표지점으로 부터 각 부모지점을 따라가다, 첫지점이 나올 때까지 스택에 저장하라.
4) 길따라가기 | 방법 >> 스택에서 하나씩 pop() 하면 된다.
관련링크
http://www.gamedev.net/reference/programming/features/astar
http://cafe.naver.com/ArticleRead.nhn?clubid=10458018&listtype=A&boardtype=L&page=1&articleid=10


기타링크
http://www.gamasutra.com/features/19970801/pathfinding.htm
http://www.geocities.com/jheyesjones/astar.html
[출처] A* 길찾기 알고리즘|작성자 엑스코더

